{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/client/client.component.html","webpack:///./src/app/client/client.component.ts","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/service/api-service.ts","webpack:///./src/app/service/local-storage-service.ts","webpack:///./src/app/service/paypalapi-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n<header>\\r\\n  <nav  class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n      <div class=\\\"alert alert-dismissible alert-secondary\\\">\\r\\n        Clockwise Clockware.\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\\r\\n<router-outlet>\\r\\n </router-outlet>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {PaypalapiService} from './service/paypalapi-service';\r\nimport {LocalStorageService} from './service/local-storage-service' ;\r\nimport {localStorage} from 'localStorage' ;\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    providers: [LocalStorageService, PaypalapiService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n\r\n    constructor(private storage: LocalStorageService, public router: Router, public paypal: PaypalapiService) {\r\n    }\r\n    ngOnInit(): void {\r\n    }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {StorageServiceModule} from 'angular-webstorage-service';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {ApiService} from './service/api-service';\r\nimport {PaypalapiService} from './service/paypalapi-service';\r\n\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {LocalStorageService} from './service/local-storage-service';\r\nimport {ClientComponent} from './client/client.component';\r\nimport {NotfoundComponent} from './notfound/notfound.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', redirectTo: '/homepage', pathMatch: 'full'},\r\n    {path: 'homepage', component: ClientComponent},\r\n    {path: 'notfound', component: NotfoundComponent},\r\n];\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ClientComponent,\r\n        NotfoundComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        StorageServiceModule,\r\n\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            {enableTracing: true} // <-- debugging purposes only\r\n        )\r\n    ],\r\n    providers: [\r\n        ApiService,\r\n        PaypalapiService,\r\n        LocalStorageService,\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<div class=\\\"container\\\" xmlns=\\\"http://www.w3.org/1999/html\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1><p class=\\\"text-info\\\"> Clockwise Clockware. </p> Ваши часы всегда будут идти в правильном направлении</h1>\\r\\n        <div style=\\\"width: 300px\\\">\\r\\n            <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"pushorder()\\\" *ngIf=\\\"!success\\\">\\r\\n                <label class=\\\"col-form-label\\\">Имя </label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Имя\\\" formControlName=\\\"name\\\">\\r\\n                <label class=\\\"col-form-label\\\">Email </label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"Email\\\" placeholder=\\\"Email@example.com\\\" formControlName=\\\"email\\\">\\r\\n                <label class=\\\"col-form-label\\\">Размер часов и стоимость</label>\\r\\n                <select class=\\\"custom-select\\\" formControlName=\\\"price_option\\\" (change)=\\\"checkmasters(0)\\\">\\r\\n                    <option *ngFor=\\\"let price of price_option\\\" [value]=\\\"price.id\\\">\\r\\n                        {{price.size}}\\r\\n                        размер\\r\\n                        {{price.price}}\\r\\n                        грн\\r\\n                    </option>\\r\\n                </select>\\r\\n                <label class=\\\"col-form-label\\\">Город</label>\\r\\n                <select class=\\\"custom-select\\\" formControlName=\\\"citys\\\" (change)=\\\"checkmasters(1)\\\">\\r\\n                    <option *ngFor=\\\"let city of citys\\\" [value]=\\\"city.id\\\">{{city.city}}</option>\\r\\n                </select>\\r\\n                <label class=\\\"col-form-label\\\">Дата и время</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"datetime-local\\\" min=\\\"00:00\\\" max=\\\"23:00\\\" step=\\\"3600\\\"\\r\\n                       formControlName=\\\"datetime\\\" (change)=\\\"checkmasters(2)\\\">\\r\\n                <label class=\\\"col-form-label\\\" *ngIf=\\\"freemasters\\\" style=\\\"color: red\\\">В указаное время нет свободных\\r\\n                    мастеров</label>\\r\\n                <label class=\\\"col-form-label\\\" *ngIf=\\\"freemasters\\\" style=\\\"color: red\\\">Выбирете другое время</label><br>\\r\\n                <label class=\\\"col-form-label\\\"\\r\\n                       *ngIf=\\\"this.inputControl[0] && this.inputControl[1] && this.inputControl[2]&& !freemasters\\\">Выбрать\\r\\n                    мастера</label>\\r\\n                <select class=\\\"custom-select\\\"\\r\\n                        *ngIf=\\\"this.inputControl[0] && this.inputControl[1] && this.inputControl[2] && !freemasters\\\"\\r\\n                        formControlName=\\\"master\\\">\\r\\n\\r\\n                    <option *ngFor=\\\"let master of masters\\\" [value]=\\\"master.id\\\">\\r\\n                        {{master.name}}\\r\\n                        {{master.surname}}\\r\\n                        Рейтинг\\r\\n                        {{master.rating}}\\r\\n                    </option>\\r\\n                </select>\\r\\n                <p></p>\\r\\n                <p></p>\\r\\n\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!addForm.valid\\\">Отправить заявку</button>\\r\\n            </form>\\r\\n            <div *ngIf=\\\"success\\\">\\r\\n                <h5><p class=\\\"text-success\\\">\\r\\n                    Вам на почту было выслано письмо с подтверждением заказа <br>\\r\\n                    Спасибо за то что воспользовались нашими услугами\\r\\n                </p>\\r\\n                    <p>\\r\\n                        Вы так-же можете провести оплату онлайн, воспользовавшись одним из сервисов представленых ниже\\r\\n                    </p>\\r\\n                    <div id=\\\"paypal-checkout-btn\\\"></div>\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-success\\\" value=\\\"Форма заказа\\\" (click)=\\\"go()\\\">\\r\\n                    <p></p>\\r\\n                </h5>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {PaypalapiService} from '../service/paypalapi-service';\r\nimport {LocalStorageService} from '../service/local-storage-service' ;\r\nimport {Router} from '@angular/router';\r\nimport {ApiService} from '../service/api-service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {formatDate} from '@angular/common';\r\n\r\n\r\n@Component({\r\n    selector: 'client-root',\r\n    templateUrl: './client.component.html',\r\n    //styleUrls: ['./app.component.css'],\r\n})\r\nexport class ClientComponent implements OnInit {\r\n    inputControl: number[] = [0, 0, 0];\r\n    citys: any;\r\n    price_option: any;\r\n    price: Object;\r\n    masters: any;\r\n    client: any;\r\n    freemasters = false;\r\n    success = false;\r\n\r\n    constructor(private apiService: ApiService, private storage: LocalStorageService, private router: Router, public paypal: PaypalapiService) {\r\n    }\r\n\r\n    addForm = new FormGroup({\r\n        name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n        email: new FormControl('', [Validators.required, Validators.email, Validators.pattern('^\\\\w+@\\\\w+\\\\.\\\\w{2,4}$')]),\r\n        price_option: new FormControl({}, Validators.required),\r\n        citys: new FormControl('', Validators.required),\r\n        datetime: new FormControl(new Date(), Validators.required),\r\n        master: new FormControl('', Validators.required)\r\n    });\r\n\r\n    ngOnInit(): void {\r\n        this.apiService.getCitys().subscribe(res => {\r\n            this.citys = res.data;\r\n        }, err => {\r\n            console.log(err);\r\n        });\r\n        this.apiService.getPrice().subscribe(res => {\r\n            this.price_option = res.data;\r\n        }, err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n\r\n    checkmasters(index: number) {\r\n        this.inputControl[index] = 1;\r\n        if (this.inputControl[0] && this.inputControl[1] && this.inputControl[2]) {\r\n            var price = {\r\n                size: '',\r\n                price: ''\r\n\r\n            };\r\n            for (var i in this.price_option) {\r\n                if (this.price_option[i].id === Number(this.addForm.value.price_option)) {\r\n                    this.price = this.price_option[i];\r\n                    price = this.price_option[i];\r\n                }\r\n            }\r\n            this.paypal.finalAmount = Object(this.price).price;\r\n            this.client = this.addForm.value;\r\n            this.apiService.letmasters(\r\n                'new',\r\n                price.size,\r\n                this.addForm.value.citys,\r\n                this.addForm.value.datetime).subscribe(res => {\r\n                this.masters = res.data;\r\n                if (this.masters.length === 0) this.freemasters = true;\r\n                else this.freemasters = false;\r\n            }, err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    go() {\r\n        this.addForm.reset();\r\n        this.inputControl[0] = 0;\r\n        this.inputControl[1] = 0;\r\n        this.inputControl[2] = 0;\r\n        this.success = !this.success;\r\n    }\r\n\r\n    pushorder() {\r\n        var master = {};\r\n        for (var i in this.masters) {\r\n            if (this.masters[i].id === Number(this.addForm.value.master)) {\r\n                master = this.masters[i];\r\n            }\r\n        }\r\n        this.apiService.pushorder(\r\n            this.addForm.value.name,\r\n            this.addForm.value.email,\r\n            this.addForm.value.citys,\r\n            this.price,\r\n            master,\r\n            this.addForm.value.datetime).subscribe(res => {\r\n            this.paypal.customId = Object(res.data).id;\r\n            this.paypal.ngAfterViewChecked();\r\n            this.success = res.success;\r\n        }, err => {\r\n            this.router.navigate(['/notfound']);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h2></h2>\\r\\n    <p class=\\\"text-danger\\\"> Ошибка 403</p>\\r\\n    <p class=\\\"text-danger\\\"> Некоректные входные данные</p>\\r\\n    <h1></h1>\\r\\n      <a [routerLink]=\\\"['/homepage']\\\" class=\\\"btn btn-success\\\">Главная страница</a>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'notfound',\r\n  templateUrl: './notfound.component.html',\r\n  //styleUrls: ['./notfound.component.css']\r\n})\r\nexport class NotfoundComponent {\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {LocalStorageService} from './local-storage-service' ;\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    private BASE_URL: string;\r\n\r\n    constructor(private http: HttpClient, private storage: LocalStorageService) {\r\n        this.BASE_URL = environment.url;\r\n    }\r\n\r\n    public getCitys(): Observable<ApiResponse> {\r\n        return this.http.get<ApiResponse>(this.BASE_URL + '/cities');\r\n    }\r\n\r\n    public getPrice(): Observable<ApiResponse> {\r\n        return this.http.get<ApiResponse>(this.BASE_URL + '/product');\r\n    }\r\n\r\n\r\n    public letmasters(option: any, size: string, city: string, datetime: string): Observable<ApiResponse> {\r\n        const params = new HttpParams({fromString: `datetime=${datetime}&size=${size}&city=${city}&option=${option}`});\r\n        return this.http.get<ApiResponse>(this.BASE_URL + '/free-master', {responseType: 'json', params});\r\n    }\r\n\r\n    public pushorder(name: string, email: string, city: string, price_option: any, master: object, datetime: string): Observable<ApiResponse> {\r\n        return this.http.post<ApiResponse>(this.BASE_URL + '/orders', {\r\n            client: name,\r\n            email: email,\r\n            size: price_option.size,\r\n            price: price_option.price,\r\n            product: price_option.id,\r\n            city: city,\r\n            master: master,\r\n            datetime: datetime\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { SESSION_STORAGE, StorageService } from 'angular-webstorage-service';\r\n\r\n\r\n\r\n\r\n// key that is used to access the data in local storage\r\nconst STORAGE_KEY = 'access_token';\r\n@Injectable()\r\nexport class LocalStorageService {\r\n  constructor(@Inject(SESSION_STORAGE) private storage:        StorageService) { }\r\n  public save(token: string): void {\r\n    // insert updated array to local storage\r\n    this.storage.set(STORAGE_KEY, token);\r\n    //console.log(this.storage.get(STORAGE_KEY) || 'LocaL storage is empty');\r\n  }\r\n  public clear(): void{\r\n    this.storage.remove(STORAGE_KEY) ;\r\n    //console.log(this.storage.get(STORAGE_KEY) || 'LocaL storage is empty');\r\n  }\r\n  public load(): string{\r\n    //console.log(this.storage.get(STORAGE_KEY) || 'LocaL storage is empty');\r\n    return this.storage.get(STORAGE_KEY) ;\r\n  }\r\n}\r\n","import {Injectable, AfterViewChecked} from '@angular/core';\r\nimport {reject} from 'q';\r\nimport {version} from 'punycode';\r\n\r\ndeclare let paypal: any;\r\n\r\n@Injectable()\r\n\r\nexport class PaypalapiService implements AfterViewChecked {\r\n    addScript: boolean = false;\r\n\r\n    finalAmount: number ;\r\n    customId: number ;\r\n\r\n    paypalConfig = {\r\n        env: 'sandbox',\r\n        client: {\r\n            sandbox: 'Adr6A_xRMrDnvbJ9Bvu20s0uDNODmFFj_LKtuP4ar343E7buS6u4aLQzxvZbFJTdlKRHIXkKnA2qJvkW',\r\n            production: '<your-production-key here>'\r\n        },\r\n        commit: true,\r\n        payment: (data, actions) => {\r\n            return actions.payment.create({\r\n                payment: {\r\n                    transactions: [\r\n                        {amount: {total: this.finalAmount, currency: 'USD'},\r\n                        custom: this.customId}\r\n                    ]\r\n                }\r\n            });\r\n        },\r\n        onAuthorize: (data, actions) => {\r\n            return actions.payment.execute().then((payment) => {\r\n                //Do something when payment is successful\r\n            })\r\n        }\r\n    };\r\n\r\n    ngAfterViewChecked(): void {\r\n        if (!this.addScript) {\r\n            this.addPaypalScript().then(() => {\r\n                paypal.Button.render(this.paypalConfig, '#paypal-checkout-btn');\r\n            });\r\n        }\r\n    }\r\n\r\n    addPaypalScript() {\r\n        this.addScript = true;\r\n        return new Promise((resolve, reject) => {\r\n            let scripttagElement = document.createElement('script');\r\n            scripttagElement.src = 'https://www.paypalobjects.com/api/checkout.js';\r\n            scripttagElement.onload = resolve;\r\n            document.body.appendChild(scripttagElement);\r\n            console.log('new tree init');\r\n        });\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  url: 'https://shrouded-spire-22347.herokuapp.com'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}